#!/bin/sh
###
# discord-bell/patcher
##
# Patches Discord electron app to run discord-bell
# Does nothing if the app is already patched
# This patcher needs to be run every time
#  the "native module" desktop_core is updated
##
# $1 (required): Discord config location
#  (it should be located at ~/.config/discord)
# $2 (required): DiscordBell config file
#  (see config.example.json)
##
# @indent SPC-4
# @out any
##
# AUTHORS Unoqwy
# LICENSE Apache-2.0
###

if [[ -z "$1" ]]; then
    echo "ERR: Please specify Discord config location.";
    exit 1
fi

if [[ -z "$2" ]]; then
    echo "ERR: Please specify DiscordBell config location.";
    exit 1
fi

DIRNAME=$(dirname "$(readlink -f "$0")")
_config=$(readlink -f "$2")

cd "$1"
DIR=$(find . -type d -name '0.*' | sort | tail -n1)
if [[ -z "$DIR" ]]; then
    echo "ERR: Invalid Discord config location. Check the path you entered."
    echo "> Note: Discord must have been downloaded for this patcher to work"
    exit 1
fi

cd "$DIR/modules/discord_desktop_core"
if asar l core.asar | grep -q "/bell-patched"; then
    echo "SUC: Discord is already patched."
    echo "> Note: Any patch change requires Discord to be unpatched (manually) before applying againg."
    exit 0
fi

rm -rf core-unpacked
asar e core.asar core-unpacked

patch1="\n  var DiscordBell = require('$DIRNAME/index.js');  contextBridge.exposeInMainWorld('DiscordBell', DiscordBell);\n  process.once('loaded', _ => DiscordBell.plug('$_config'));"
patch2="\n  mainWindow.on('closed', _ => require('$DIRNAME/onclose.js'));"
(
    cd core-unpacked/app
    sed "/else/e echo \"$patch1\"" mainScreenPreload.js > _tmp && mv _tmp mainScreenPreload.js
    sed "/setupSystemTray();/e echo \"$patch2\"" mainScreen.js > _tmp && mv _tmp mainScreen.js
    cd ..
    touch bell-patched
)

cp core.asar core.asar.original
asar p core-unpacked core.asar
rm -r core-unpacked
echo "SUC: Discord should have been patched with discord-bell!"
