#!/bin/bash
# vim: set fdm=marker
set -e
set -o pipefail

if [[ "$EUID" == 0 ]]; then
    echo "This should not be run as root!"
    exit 1
fi

## Software requirements {{{
if cat /etc/os-release 2>/dev/null | grep ID=arch >/dev/null; then
    echo "Arch Linux detected. Ensuring base packages are installed..."
    sudo pacman -Sy base-devel ansible python python-yaml
fi

if ! command -v ansible > /dev/null; then
    echo "Ansible is missing. Please install it"
    exit 1
fi
if ! command -v python3 > /dev/null; then
    echo "Python 3 is missing. It should have come with Ansible, PATH issue?"
    exit 1
fi
## }}}

## Primary argument {{{
if [[ "$1" != *"config"* && "$1" != *"packages"* ]]; then
    echo "Usage: $0 <filter(config,packages)> [ansible args]"
    exit 1
fi
df_filter="$1"
shift
## }}}

base=$(readlink -f "$(dirname $(readlink -f "$0"))/..")

## Sudo password input {{{
function prompt_password {
    read -p "Password: " -s _pwd_input
    if printf "$_pwd_input\n" | sudo -Skp '' true &>/dev/null; then
        echo "$_pwd_input"
    else
        exit 1
    fi
}

echo "Enter sudo password. This is required now so the whole process can complete in one go."
_pwd=$(prompt_password)
if [[ -z "$_pwd" ]]; then
    >&2 echo "Invalid sudo password"
    exit 1
fi
printf "\n"
## }}}

function anp {
    ANSIBLE_CONFIG=ansible/ansible.cfg ansible-playbook -i ansible/hosts $@
}

if ! echo "$_pwd" | anp "$base/ansible/playbooks/init-playbook.yml" --become-password-file -; then
    >&2 echo "Failed to install the correct environment for Ansible"
    exit 1
fi

## Generate playbooks {{{
echo "Generating playbooks..."
source "$base/ansible/venv/bin/activate"

if [[ ! -f "$base/.env" ]]; then
    echo "Created new .env file"
    cp "$base/.env.example" "$base/.env"
fi

mkdir -p "$base/ansible/.generated"
"$base/ansible/scripts/generate_vars"
if [[ -d "$base/ansible/.generated/roles" ]]; then
    rm -rf "$base/ansible/.generated/roles"
fi
mkdir -p "$base/ansible/.generated/roles"
"$base/ansible/scripts/generate_playbook"
## }}}

echo "Updating theme files..."
if ! "$base/bin/theme" 1>/dev/null; then
    exit 1
fi

mkdir -p "$HOME/.config"
mkdir -p "$HOME/.local/bin"

echo "$_pwd" | anp "$base/ansible/.generated/playbook-install.yml"\
    --become-password-file -\
    --extra-vars "{\"df_filter\":\"$df_filter\"}"\
    $@

