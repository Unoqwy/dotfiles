#!/bin/sh
# vim:fdm=marker

## ZSH config {{{
# zsh:history/search
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000
SAVEHIST=$HISTSIZE
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE

autoload -Uz up-line-or-beginning-search
autoload -Uz down-line-or-beginning-search
zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

# zsh:general
setopt autocd
setopt interactive_comments

# zsh:completion
autoload -Uz compinit; compinit
setopt MENU_COMPLETE
zstyle ":completion:*" menu select

# zsh:prompt
autoload -Uz promptinit; promptinit
if [[ "$TERM" == "dumb" || "$TERM" == "linux" ]]; then
    PS1="%(?..[%?] )%n@%m:%~ " # based on default prompt 'walters'
else
    setopt PROMPT_SUBST
    autoload -Uz vcs_info
    zstyle ":vcs_info:*" enable git
    zstyle ":vcs_info:git*" formats "  %b"
    precmd() { vcs_info; }

    if [[ -n "$SSH_CONNECTION" ]]; then
        PS1='%F{red}%(?.. <%?>)%F{magenta}${vcs_info_msg_0_} %F{red}%BSSH %F{black}%f '
    elif [[ $UID == 0 || $EUID == 0 ]]; then
        PS1='%F{red}%(?.. <%?>)%F{magenta}${vcs_info_msg_0_} %F{red}%Broot %F{black}%f '
    else
        PS1='%F{red}%(?.. <%?>)%F{magenta}${vcs_info_msg_0_} %F{black}%f '
    fi
    RPS1="%F{blue}%~%f"
fi
## }}}

## Sourcing {{{
# zsh:syntax-highlighting
_ZSH_SHL_SOURCE="/usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
if [[ -f $_ZSH_SHL_SOURCE ]]; then
    source "$_ZSH_SHL_SOURCE"
fi

# source z.lua
if [[ -f /usr/share/z.lua/z.lua ]]; then
    eval "$(/usr/share/z.lua/z.lua --init zsh)"
fi

_TMUX_EXT_SOURCE="$HOME/.config/tmux/tmux_ext.sh"
if [[ -f $_TMUX_EXT_SOURCE ]]; then
    source "$_TMUX_EXT_SOURCE"

    _fzf_tmux_session() {
        session=$(tl list-known-sessions | fzf +m)
        if [[ -n $session ]]; then
            BUFFER="ta $session"
            zle accept-line
        fi
    }

    zle -N _fzf_tmux_session
else
    alias ta="tmux attach -t"
fi
## }}}

## History search {{{
_fzf_hist() {
    line=$(fc -lnr 0 | fzf +s +m)
    if [[ -n $line ]]; then
        BUFFER="$line"
        zle end-of-line
    fi
}

zle -N _fzf_hist
## }}}

## Misc widgets {{{
_start_editor() {
    BUFFER="${EDITOR:-vim}"
    zle accept-line
}

zle -N _start_editor
#}}}

## Keybindinsg {{{
bindkey -v

# builtin
bindkey "^k" up-line-or-beginning-search
bindkey "^j" down-line-or-beginning-search
bindkey '^[[Z' reverse-menu-complete

# misc
bindkey "^r" _fzf_hist
bindkey "^t" _fzf_tmux_session
bindkey "^n" _start_editor
## }}}

## Aliases {{{
alias ssh="TERM=xterm-256color ssh"

# history aliases
alias hist="vim ~/.zsh_history"
alias inhist="history 0 | grep -i"

# require confirmation on main file ops
alias cp="cp --interactive"
alias mv="mv --interactive"
alias rm="rm --interactive"

# automatic colors
alias ls="ls --color=auto"
alias grep="grep --color=auto"

# common operations
alias cl="clear"
alias la="ls -a"
alias lh="ls -lh"
alias ll="ls -lah"
alias yank="xclip -selection clipboard"

# git
alias g="git"
alias ga="gita"
alias gs="git status"
alias lg="lazygit"

# alias vim and vi to nvim if installed
if type nvim > /dev/null; then
    alias vim="nvim"
    alias vi="nvim"
fi
alias f="xplr"
alias j="just"
alias c="cargo"
alias p="pnpm"
alias px="pnpm dlx"
alias fl="flutter"
alias dc="docker-compose"

alias nf="neofetch"
alias nfr="neofetch --config none"
alias dh="df -h"

alias ts="tree-sitter"
alias octperm="stat -c %a"
## }}}

## Misc tools {{{
function rsed { find . -type f -exec sed -i "s|$1|$2|g" {} +; }
function rsedg { find . -type f -exec sed -i "s/$1/$2/g" {} +; }

function ebin {
    if which "$1" > /dev/null; then vi $(which "$1"); else echo "Bin not found" 1>&2; fi
}

function synctime {
    sudo sh -c 'ntpd -gq && hwclock --systohc'
}
## }}}

# pnpm
export PNPM_HOME="/home/jq/.local/share/pnpm"
case ":$PATH:" in
  *":$PNPM_HOME:"*) ;;
  *) export PATH="$PNPM_HOME:$PATH" ;;
esac
# pnpm end
